syntax = "proto3";

package zvelo.msg;

option go_package = "zvelo.io/msg";

import "zvelo/msg/category.proto";
import "google/rpc/status.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

enum DataSetType {
  CATEGORIZATION = 0;
  // 1 is reserved
  // 2 is reserved
  // 3 is reserved
  MALICIOUS      = 4;
  ECHO           = 5; // for internal zvelo use only
  // 6 is reserved
}

// DataSet
message DataSet {
  option (gogoproto.equal) = false;
  option (gogoproto.verbose_equal) = false;
  option (gogoproto.marshaler) = false;
  option (gogoproto.unmarshaler) = false;
  option (gogoproto.sizer) = false;

  // Categorization
  message Categorization {
    option (gogoproto.equal) = false;
    option (gogoproto.verbose_equal) = false;
    option (gogoproto.marshaler) = false;
    option (gogoproto.unmarshaler) = false;
    option (gogoproto.sizer) = false;

    reserved 1;
    reserved 2;
    repeated Category value = 3;
    google.rpc.Status error = 4;
  }

  // Malicious
  message Malicious {
    option (gogoproto.equal) = false;
    option (gogoproto.verbose_equal) = false;
    option (gogoproto.marshaler) = false;
    option (gogoproto.unmarshaler) = false;
    option (gogoproto.sizer) = false;

    enum Verdict {
      VERDICT_UNKNOWN   = 0;
      VERDICT_CLEAN     = 1;
      VERDICT_MALICIOUS = 2;
    }

    reserved 1;
    reserved 2;
    reserved 3;
    reserved 4;
    reserved 5;
    Category          category = 6;
    Verdict           verdict  = 7;
    google.rpc.Status error    = 8;
  }

  // Echo
  message Echo {
    option (gogoproto.equal) = false;
    option (gogoproto.verbose_equal) = false;
    option (gogoproto.marshaler) = false;
    option (gogoproto.unmarshaler) = false;
    option (gogoproto.sizer) = false;

    string            url   = 1;
    google.rpc.Status error = 2;
  }

  Categorization categorization = 1;
  reserved 2;
  reserved 3;
  reserved 4;
  Malicious      malicious      = 5;
  Echo           echo           = 6;
  reserved 7;
}
