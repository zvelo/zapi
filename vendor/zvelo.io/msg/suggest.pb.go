// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: zvelo/msg/suggest.proto

package msg

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

import strings "strings"
import reflect "reflect"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Suggestion struct {
	Url     string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Dataset *DataSet `protobuf:"bytes,2,opt,name=dataset" json:"dataset,omitempty"`
}

func (m *Suggestion) Reset()                    { *m = Suggestion{} }
func (*Suggestion) ProtoMessage()               {}
func (*Suggestion) Descriptor() ([]byte, []int) { return fileDescriptorSuggest, []int{0} }

func (m *Suggestion) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Suggestion) GetDataset() *DataSet {
	if m != nil {
		return m.Dataset
	}
	return nil
}

func init() {
	proto.RegisterType((*Suggestion)(nil), "zvelo.msg.Suggestion")
}
func (this *Suggestion) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&msg.Suggestion{")
	s = append(s, "Url: "+fmt.Sprintf("%#v", this.Url)+",\n")
	if this.Dataset != nil {
		s = append(s, "Dataset: "+fmt.Sprintf("%#v", this.Dataset)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringSuggest(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (this *Suggestion) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Suggestion{`,
		`Url:` + fmt.Sprintf("%v", this.Url) + `,`,
		`Dataset:` + strings.Replace(fmt.Sprintf("%v", this.Dataset), "DataSet", "DataSet", 1) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringSuggest(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}

func init() { proto.RegisterFile("zvelo/msg/suggest.proto", fileDescriptorSuggest) }

var fileDescriptorSuggest = []byte{
	// 241 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xaf, 0x2a, 0x4b, 0xcd,
	0xc9, 0xd7, 0xcf, 0x2d, 0x4e, 0xd7, 0x2f, 0x2e, 0x4d, 0x4f, 0x4f, 0x2d, 0x2e, 0xd1, 0x2b, 0x28,
	0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x04, 0x4b, 0xe8, 0xe5, 0x16, 0xa7, 0x4b, 0x21, 0xa9, 0x49, 0x49,
	0x2c, 0x49, 0x2c, 0x4e, 0x85, 0xaa, 0x91, 0xd2, 0x4d, 0xcf, 0x2c, 0xc9, 0x28, 0x4d, 0xd2, 0x4b,
	0xce, 0xcf, 0xd5, 0x4f, 0xcf, 0x4f, 0xcf, 0xd7, 0x07, 0x0b, 0x27, 0x95, 0xa6, 0x81, 0x79, 0x60,
	0x0e, 0x98, 0x05, 0x51, 0xae, 0x94, 0xc4, 0xc5, 0x15, 0x0c, 0xb1, 0x23, 0x33, 0x3f, 0x4f, 0x48,
	0x80, 0x8b, 0xb9, 0xb4, 0x28, 0x47, 0x82, 0x51, 0x81, 0x51, 0x83, 0x33, 0x08, 0xc4, 0x14, 0xd2,
	0xe1, 0x62, 0x87, 0x9a, 0x2f, 0xc1, 0xa4, 0xc0, 0xa8, 0xc1, 0x6d, 0x24, 0xa4, 0x07, 0x77, 0x84,
	0x9e, 0x4b, 0x62, 0x49, 0x62, 0x70, 0x6a, 0x49, 0x10, 0x4c, 0x89, 0x95, 0xc8, 0x82, 0x05, 0xf2,
	0x0c, 0x2f, 0x16, 0xc8, 0x33, 0x74, 0x2c, 0x94, 0x67, 0x98, 0xb0, 0x50, 0x9e, 0x61, 0xc1, 0x42,
	0x79, 0x06, 0x27, 0xbb, 0x0b, 0x0f, 0xe5, 0x18, 0x6e, 0x3c, 0x94, 0x63, 0x78, 0xf0, 0x50, 0x8e,
	0xf1, 0xc3, 0x43, 0x39, 0xc6, 0x86, 0x47, 0x72, 0x8c, 0x2b, 0x1e, 0xc9, 0x31, 0x9e, 0x78, 0x24,
	0xc7, 0x78, 0xe1, 0x91, 0x1c, 0xe3, 0x83, 0x47, 0x72, 0x8c, 0x2f, 0x1e, 0xc9, 0x31, 0x7c, 0x78,
	0x24, 0xc7, 0x38, 0xe1, 0xb1, 0x1c, 0x43, 0x14, 0x0f, 0xc4, 0x8e, 0x4c, 0xb0, 0x07, 0x93, 0xd8,
	0xc0, 0x4e, 0x35, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x80, 0x19, 0xa8, 0x51, 0x18, 0x01, 0x00,
	0x00,
}
